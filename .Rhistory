knitr::opts_chunk$set(echo = FALSE)
# Learn more about creating websites with Distill at:
# https://rstudio.github.io/distill/website.html
# Learn more about publishing to GitHub Pages at:
# https://rstudio.github.io/distill/publish_website.html#github-pages
distill::create_article(file="shiny_app")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = FALSE)
# Learn more about creating websites with Distill at:
# https://rstudio.github.io/distill/website.html
# Learn more about publishing to GitHub Pages at:
# https://rstudio.github.io/distill/publish_website.html#github-pages
install.packages("postcards")
distill::create_article(file="new_about",
template = "jolla",
package = "postcards")
library(readr)
netflix_titles <- read_csv("~/Desktop/HIA 229 DataVisualization/Week 7/netflix_titles.csv")
View(netflix_titles)
knitr::opts_chunk$set(echo = FALSE)
netflix_data <- read_csv("netflix_titles.csv")
knitr::opts_chunk$set(echo = TRUE)
# Load required libraries
library(ggplot2)
# Load dataset
netflix_data <- read.csv("netflix_titles.csv")
# Explore dataset
# View the first few rows of the dataset
head(netflix_data)
summary(netflix_data)  # Summary statistics for numeric columns
str(netflix_data)  # Structure of the dataset
# Create a simple visualization
ggplot(netflix_data, aes(x = type)) +  # Plotting the 'type' variable
geom_bar() +  # Creating a bar plot
labs(title = "Distribution of Content Type on Netflix", x = "Type of Content", y = "Count")  # Adding plot labels
summary(netflix_data)
# Load required libraries
library(dplyr)
library(ggplot2)
# Load dataset
netflix_data <- read.csv("netflix_titles.csv")
# Filter the dataset for shows available in the specified countries
filtered_data <- netflix_data %>%
filter(country %in% c("United States", "United Kingdom", "India", "Europe", "Canada"))
# Group the data by title and type (movie or TV show), and count the number of occurrences
show_counts <- filtered_data %>%
group_by(title, type) %>%
summarise(count = n()) %>%
arrange(desc(count))  # Arrange the data by count in descending order
# Select the top 5 shows by count
top_5_shows <- show_counts %>%
slice_head(n = 5)
# Create a bar plot to visualize the top 5 shows
ggplot(top_5_shows, aes(x = reorder(title, count), y = count, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Top 5 Shows Watched in Selected Countries",
x = "Show Title",
y = "Number of Views",
fill = "Type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_manual(values = c("Movie" = "blue", "TV Show" = "red"))  # Customizing fill colors
# Create a horizontal bar plot to visualize the top 5 shows
ggplot(top_5_shows, aes(y = reorder(title, count), x = count, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Top 5 Shows Watched in Selected Countries",
y = "Show Title",
x = "Number of Views",
fill = "Type") +
theme(axis.text.y = element_text(size = 10),  # Adjust font size of y-axis labels
legend.position = "bottom")  # Move legend to the bottom
library(readr)
netflix_titles <- read_csv("netflix_titles.csv")
View(netflix_titles)
knitr::opts_chunk$set(echo = TRUE)
# Load required libraries
library(dplyr)
library(ggplot2)
# Load dataset
netflix_data <- read.csv("netflix_titles.csv")
# Create a horizontal bar plot to visualize the top 5 shows
ggplot(top_5_shows, aes(y = reorder(title, count), x = count, fill = type)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Top 5 Shows Watched in Selected Countries",
y = "Show Title",
x = "Number of Views",
fill = "Type") +
theme(axis.text.y = element_text(size = 10),  # Adjust font size of y-axis labels
legend.position = "bottom")  # Move legend to the bottom
View(top_5_shows)
View(show_counts)
# Filter the dataset to include only required columns
filtered_data <- netflix_data %>%
select(country, rating)
# Create a box plot to visualize the distribution of ratings across countries
ggplot(filtered_data, aes(x = country, y = rating)) +
geom_boxplot() +
labs(title = "Distribution of Ratings Across Countries",
x = "Country",
y = "Rating")
View(show_counts)
