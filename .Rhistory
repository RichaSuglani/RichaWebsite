geom_col(data = top_shows, aes(x = reorder(title, count), y = count, fill = "TV Show"), position = "dodge") +
labs(
title = "Top 5 Movies and TV Shows on Netflix in 2024 (USA, Canada, UK)",
x = "Title",
y = "Count",
fill = "Content Type"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
# Filter for 2024 releases and specific countries
netflix_2024 <- netflix_data %>%
filter(release_year == 2023, country %in% c("India", "France", "Japan")) %>%
mutate(content_type = ifelse(type == "Movie", "Movie", "TV Show"))
# Get the top 5 movies
top_movies <- netflix_2024 %>%
filter(content_type == "Movie") %>%
group_by(title) %>%
summarise(count = n()) %>%
top_n(5, count) %>%
arrange(desc(count))
# Get the top 5 TV shows
top_shows <- netflix_2024 %>%
filter(content_type == "TV Show") %>%
group_by(title) %>%
summarise(count = n()) %>%
top_n(5, count) %>%
arrange(desc(count))
# Create the visualization
ggplot() +
geom_col(data = top_movies, aes(x = reorder(title, count), y = count, fill = "Movie"), position = "dodge") +
geom_col(data = top_shows, aes(x = reorder(title, count), y = count, fill = "TV Show"), position = "dodge") +
labs(
title = "Top 5 Movies and TV Shows on Netflix in 2024 (USA, Canada, UK)",
x = "Title",
y = "Count",
fill = "Content Type"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load the dataset
netflix_data <- read_csv("netflix_titles.csv")
# Filter for 2021 releases from the United States and India
netflix_2021 <- netflix_data %>%
filter(release_year == 2021,
country %in% c("United States", "India"),
listed_in %in% c("Reality TV", "Documentaries", "Sports Movies", "Action & Adventure", "Dramas", "TV Shows", "TV Comedies", "TV Dramas", "Comedies", "Anime Series", "Thrillers")) %>%
mutate(content_type = ifelse(type == "Movie", "Movie", "TV Show"))
# Get the top 5 movies
top_movies <- netflix_2021 %>%
filter(content_type == "Movie") %>%
group_by(title) %>%
summarise(count = n()) %>%
top_n(5, count) %>%
arrange(desc(count))
# Get the top 5 TV shows
top_shows <- netflix_2021 %>%
filter(content_type == "TV Show") %>%
group_by(title) %>%
summarise(count = n()) %>%
top_n(5, count) %>%
arrange(desc(count))
# Create the visualization
ggplot() +
geom_col(data = top_movies, aes(x = reorder(title, count), y = count, fill = "Movie"), position = "dodge") +
geom_col(data = top_shows, aes(x = reorder(title, count), y = count, fill = "TV Show"), position = "dodge") +
labs(
title = "Top 5 Movies and TV Shows on Netflix in 2021 (USA & India)",
x = "Title",
y = "Count",
fill = "Content Type"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
file.create(".nojekyll")
knitr::opts_chunk$set(echo = FALSE)
rmarkdown::render("DearData.rmd")
rmarkdown::render("DearData.rmd")
# Load necessary packages
library(readr)
library(dplyr)
library(ggplot2)
library(forcats)  # Load the forcats package for fct_reorder function
knitr::opts_chunk$set(echo = TRUE)
# Load the dataset
netflix_data <- read_csv("netflix_titles.csv")
# Filter for movies and TV shows released in 2022 from the USA and India
netflix_filtered <- netflix_data %>%
filter(release_year == 2020,
country %in% c("United States", "India"))
# Group by type (Movie or TV Show) and listed_in (genre), and count the number of occurrences
genre_counts <- netflix_filtered %>%
group_by(type, listed_in, country) %>%
summarise(count = n()) %>%
arrange(desc(count))
# Get the top 5 genres for movies and TV shows in the USA and India
top_genres <- genre_counts %>%
group_by(type, country) %>%
top_n(5, count)
# Create a data frame for plotting
plot_data <- top_genres %>%
mutate(rank = row_number())
# Define the colors for the plot
colors <- c("#FF5733", "#335EFF", "#33FF57", "#FF33F0", "#F0FF33")
tvshow_plot <- ggplot(plot_data %>% filter(type == "TV Show"),
aes(x = fct_reorder(listed_in, count), y = count, fill = country)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
labs(title = "Top 5 TV Show Genres in India vs USA (2022)",
x = "Genre",
y = "Count",
fill = "Country") +
scale_fill_manual(values = colors) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
movie_plot <- ggplot(plot_data %>% filter(type == "Movie"),
aes(x = fct_reorder(listed_in, count), y = count, fill = country)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
labs(title = "Top 5 Movie Genres in India vs USA (2022)",
x = "Genre",
y = "Count",
fill = "Country") +
scale_fill_manual(values = colors) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
movie_plot
tvshow_plot
# Load necessary packages
library(readr)
library(dplyr)
library(ggplot2)
library(forcats)  # Load the forcats package for fct_reorder function
knitr::opts_chunk$set(echo = TRUE)
# Load necessary packages
library(readr)
library(dplyr)
library(ggplot2)
library(forcats)  # Load the forcats package for fct_reorder function
knitr::opts_chunk$set(echo = TRUE)
View(netflix_filtered)
# Load necessary packages
library(readr)
library(dplyr)
library(ggplot2)
library(forcats)  # Load the forcats package for fct_reorder function
knitr::opts_chunk$set(echo = TRUE)
# Load necessary packages
library(readr)
library(dplyr)
library(ggplot2)
library(forcats)  # Load the forcats package for fct_reorder function
knitr::opts_chunk$set(echo = TRUE)
# Load necessary packages
library(readr)
library(dplyr)
library(ggplot2)
library(forcats)  # Load the forcats package for fct_reorder function
knitr::opts_chunk$set(echo = TRUE)
# Load necessary packages
library(readr)
library(dplyr)
library(ggplot2)
library(forcats)  # Load the forcats package for fct_reorder function
knitr::opts_chunk$set(echo = TRUE)
# Load necessary packages
library(readr)
library(dplyr)
library(ggplot2)
library(forcats)  # Load the forcats package for fct_reorder function
knitr::opts_chunk$set(echo = TRUE)
# Load the dataset
netflix_data <- read_csv("netflix_titles.csv")
# Filter for movies and TV shows released in 2022 from the USA and India
netflix_filtered <- netflix_data %>%
filter(release_year == 2020,
country %in% c("United States", "India"))
# Group by type (Movie or TV Show) and listed_in (genre), and count the number of occurrences
genre_counts <- netflix_filtered %>%
group_by(type, listed_in, country) %>%
summarise(count = n()) %>%
arrange(desc(count))
# Get the top 5 genres for movies and TV shows in the USA and India
top_genres <- genre_counts %>%
group_by(type, country) %>%
top_n(5, count)
# Create a data frame for plotting
plot_data <- top_genres %>%
mutate(rank = row_number())
# Define the colors for the plot
colors <- c("#FF5733", "#335EFF", "#33FF57", "#FF33F0", "#F0FF33")
movie_plot <- ggplot(plot_data %>% filter(type == "Movie"),
aes(x = fct_reorder(listed_in, count), y = count, fill = country)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
labs(title = "Top 5 Movie Genres in India vs USA (2020)",
x = "Genre",
y = "Count",
fill = "Country") +
scale_fill_manual(values = colors) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
movie_plot
tvshow_plot <- ggplot(plot_data %>% filter(type == "TV Show"),
aes(x = fct_reorder(listed_in, count), y = count, fill = country)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
labs(title = "Top 5 TV Show Genres in India vs USA (2020)",
x = "Genre",
y = "Count",
fill = "Country") +
scale_fill_manual(values = colors) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tvshow_plot
# Load necessary packages
library(readr)
library(dplyr)
library(ggplot2)
library(forcats)  # Load the forcats package for fct_reorder function
knitr::opts_chunk$set(echo = TRUE)
# Load the dataset
netflix_data <- read_csv("netflix_titles.csv")
# Filter for movies and TV shows released in 2022 from the USA and India
netflix_filtered <- netflix_data %>%
filter(release_year == 2020,
country %in% c("United States", "India"))
# Group by type (Movie or TV Show) and listed_in (genre), and count the number of occurrences
genre_counts <- netflix_filtered %>%
group_by(type, listed_in, country) %>%
summarise(count = n()) %>%
arrange(desc(count))
# Get the top 5 genres for movies and TV shows in the USA and India
top_genres <- genre_counts %>%
group_by(type, country) %>%
top_n(5, count)
# Create a data frame for plotting
plot_data <- top_genres %>%
mutate(rank = row_number())
# Define the colors for the plot
colors <- c("#FF5733", "#335EFF", "#33FF57", "#FF33F0", "#F0FF33")
movie_plot <- ggplot(plot_data %>% filter(type == "Movie"),
aes(x = fct_reorder(listed_in, count), y = count, fill = country)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
labs(title = "Top 5 Movie Genres in India vs USA (2020)",
x = "Genre",
y = "Count",
fill = "Country") +
scale_fill_manual(values = colors) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
movie_plot
tvshow_plot <- ggplot(plot_data %>% filter(type == "TV Show"),
aes(x = fct_reorder(listed_in, count), y = count, fill = country)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
labs(title = "Top 5 TV Show Genres in India vs USA (2020)",
x = "Genre",
y = "Count",
fill = "Country") +
scale_fill_manual(values = colors) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tvshow_plot
rmarkdown::render("Netflix_Analysis.Rmd")
# Load necessary packages
library(readr)
library(dplyr)
library(ggplot2)
library(forcats)  # Load the forcats package for fct_reorder function
knitr::opts_chunk$set(echo = TRUE)
# Load the dataset
netflix_data <- read_csv("netflix_titles.csv")
# Filter for movies and TV shows released in 2022 from the USA and India
netflix_filtered <- netflix_data %>%
filter(release_year == 2020,
country %in% c("United States", "India"))
# Group by type (Movie or TV Show) and listed_in (genre), and count the number of occurrences
genre_counts <- netflix_filtered %>%
group_by(type, listed_in, country) %>%
summarise(count = n()) %>%
arrange(desc(count))
# Get the top 5 genres for movies and TV shows in the USA and India
top_genres <- genre_counts %>%
group_by(type, country) %>%
top_n(5, count)
# Create a data frame for plotting
plot_data <- top_genres %>%
mutate(rank = row_number())
# Define the colors for the plot
colors <- c("#FF5733", "#335EFF", "#33FF57", "#FF33F0", "#F0FF33")
movie_plot <- ggplot(plot_data %>% filter(type == "Movie"),
aes(x = fct_reorder(listed_in, count), y = count, fill = country)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
labs(title = "Top 5 Movie Genres in India vs USA (2020)",
x = "Genre",
y = "Count",
fill = "Country") +
scale_fill_manual(values = colors) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
movie_plot
tvshow_plot <- ggplot(plot_data %>% filter(type == "TV Show"),
aes(x = fct_reorder(listed_in, count), y = count, fill = country)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
labs(title = "Top 5 TV Show Genres in India vs USA (2020)",
x = "Genre",
y = "Count",
fill = "Country") +
scale_fill_manual(values = colors) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tvshow_plot
rmarkdown::render("Netflix_Analysis.Rmd")
# Load necessary packages
library(readr)
library(dplyr)
library(ggplot2)
library(forcats)  # Load the forcats package for fct_reorder function
knitr::opts_chunk$set(echo = TRUE)
# Load the dataset
netflix_data <- read_csv("netflix_titles.csv")
# Filter for movies and TV shows released in 2022 from the USA and India
netflix_filtered <- netflix_data %>%
filter(release_year == 2020,
country %in% c("United States", "India"))
# Group by type (Movie or TV Show) and listed_in (genre), and count the number of occurrences
genre_counts <- netflix_filtered %>%
group_by(type, listed_in, country) %>%
summarise(count = n()) %>%
arrange(desc(count))
# Get the top 5 genres for movies and TV shows in the USA and India
top_genres <- genre_counts %>%
group_by(type, country) %>%
top_n(5, count)
# Create a data frame for plotting
plot_data <- top_genres %>%
mutate(rank = row_number())
# Define the colors for the plot
colors <- c("#FF5733", "#335EFF", "#33FF57", "#FF33F0", "#F0FF33")
movie_plot <- ggplot(plot_data %>% filter(type == "Movie"),
aes(x = fct_reorder(listed_in, count), y = count, fill = country)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
labs(title = "Top 5 Movie Genres in India vs USA (2020)",
x = "Genre",
y = "Count",
fill = "Country") +
scale_fill_manual(values = colors) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
movie_plot
tvshow_plot <- ggplot(plot_data %>% filter(type == "TV Show"),
aes(x = fct_reorder(listed_in, count), y = count, fill = country)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
labs(title = "Top 5 TV Show Genres in India vs USA (2020)",
x = "Genre",
y = "Count",
fill = "Country") +
scale_fill_manual(values = colors) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tvshow_plot
# Load necessary packages
library(readr)
library(dplyr)
library(ggplot2)
library(forcats)  # Load the forcats package for fct_reorder function
knitr::opts_chunk$set(echo = TRUE)
# Load the dataset
netflix_data <- read_csv("netflix_titles.csv")
# Filter for movies and TV shows released in 2022 from the USA and India
netflix_filtered <- netflix_data %>%
filter(release_year == 2020,
country %in% c("United States", "India"))
# Group by type (Movie or TV Show) and listed_in (genre), and count the number of occurrences
genre_counts <- netflix_filtered %>%
group_by(type, listed_in, country) %>%
summarise(count = n()) %>%
arrange(desc(count))
# Get the top 5 genres for movies and TV shows in the USA and India
top_genres <- genre_counts %>%
group_by(type, country) %>%
top_n(5, count)
# Create a data frame for plotting
plot_data <- top_genres %>%
mutate(rank = row_number())
# Define the colors for the plot
colors <- c("#FF5733", "#335EFF", "#33FF57", "#FF33F0", "#F0FF33")
movie_plot <- ggplot(plot_data %>% filter(type == "Movie"),
aes(x = fct_reorder(listed_in, count), y = count, fill = country)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
labs(title = "Top 5 Movie Genres in India vs USA (2020)",
x = "Genre",
y = "Count",
fill = "Country") +
scale_fill_manual(values = colors) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
movie_plot
tvshow_plot <- ggplot(plot_data %>% filter(type == "TV Show"),
aes(x = fct_reorder(listed_in, count), y = count, fill = country)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
labs(title = "Top 5 TV Show Genres in India vs USA (2020)",
x = "Genre",
y = "Count",
fill = "Country") +
scale_fill_manual(values = colors) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tvshow_plot
rmarkdown::render("Netflix_Analysis.Rmd")
rmarkdown::render_site()
rmarkdown::render("Netflix_Analysis.Rmd")
# Load necessary packages
library(readr)
library(dplyr)
library(ggplot2)
library(forcats)  # Load the forcats package for fct_reorder function
knitr::opts_chunk$set(echo = TRUE)
# Load the dataset
netflix_data <- read_csv("netflix_titles.csv")
# Filter for movies and TV shows released in 2022 from the USA and India
netflix_filtered <- netflix_data %>%
filter(release_year == 2020,
country %in% c("United States", "India"))
# Group by type (Movie or TV Show) and listed_in (genre), and count the number of occurrences
genre_counts <- netflix_filtered %>%
group_by(type, listed_in, country) %>%
summarise(count = n()) %>%
arrange(desc(count))
# Get the top 5 genres for movies and TV shows in the USA and India
top_genres <- genre_counts %>%
group_by(type, country) %>%
top_n(5, count)
# Create a data frame for plotting
plot_data <- top_genres %>%
mutate(rank = row_number())
# Define the colors for the plot
colors <- c("#FF5733", "#335EFF", "#33FF57", "#FF33F0", "#F0FF33")
movie_plot <- ggplot(plot_data %>% filter(type == "Movie"),
aes(x = fct_reorder(listed_in, count), y = count, fill = country)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
labs(title = "Top 5 Movie Genres in India vs USA (2020)",
x = "Genre",
y = "Count",
fill = "Country") +
scale_fill_manual(values = colors) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
movie_plot
tvshow_plot <- ggplot(plot_data %>% filter(type == "TV Show"),
aes(x = fct_reorder(listed_in, count), y = count, fill = country)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
labs(title = "Top 5 TV Show Genres in India vs USA (2020)",
x = "Genre",
y = "Count",
fill = "Country") +
scale_fill_manual(values = colors) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tvshow_plot
# Load the dataset
netflix_data <- read_csv("netflix_titles.csv")
# Filter for movies and TV shows released in 2022 from the USA and India
netflix_filtered <- netflix_data %>%
filter(release_year == 2020,
country %in% c("United States", "India"))
# Group by type (Movie or TV Show) and listed_in (genre), and count the number of occurrences
genre_counts <- netflix_filtered %>%
group_by(type, listed_in, country) %>%
summarise(count = n()) %>%
arrange(desc(count))
# Get the top 5 genres for movies and TV shows in the USA and India
top_genres <- genre_counts %>%
group_by(type, country) %>%
top_n(5, count)
# Create a data frame for plotting
plot_data <- top_genres %>%
mutate(rank = row_number())
# Define the colors for the plot
colors <- c("#FF5733", "#335EFF", "#33FF57", "#FF33F0", "#F0FF33")
# Load necessary packages
library(readr)
library(dplyr)
library(ggplot2)
library(forcats)  # Load the forcats package for fct_reorder function
knitr::opts_chunk$set(echo = TRUE)
movie_plot <- ggplot(plot_data %>% filter(type == "Movie"),
aes(x = fct_reorder(listed_in, count), y = count, fill = country)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
labs(title = "Top 5 Movie Genres in India vs USA (2020)",
x = "Genre",
y = "Count",
fill = "Country") +
scale_fill_manual(values = colors) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
movie_plot
tvshow_plot <- ggplot(plot_data %>% filter(type == "TV Show"),
aes(x = fct_reorder(listed_in, count), y = count, fill = country)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9), width = 0.7) +
labs(title = "Top 5 TV Show Genres in India vs USA (2020)",
x = "Genre",
y = "Count",
fill = "Country") +
scale_fill_manual(values = colors) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tvshow_plot
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render("Netflix_Analysis.Rmd")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render("shiny_app.Rmd")
rmarkdown::render_site()
rmarkdown::render_site()
